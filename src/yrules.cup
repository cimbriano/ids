import java_cup.runtime.*;

parser code {:

    public void report_error(String msg, Object i) {
	StringBuffer m = new StringBuffer("Error");

	if (i instanceof java_cup.runtime.Symbol) {
	    java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) i);

	    if (s.left >= 0) {
		m.append(" in line " + (s.left+1));

		if (s.right >= 0)
		    m.append(", column " + (s.right+1));

		m.append(", symbol " + s.toString());
		m.append(", value " + s.value.toString());
	    }
	}

	m.append(" : " + msg);

	System.err.println(m);
    }

    public void report_fatal_error(String msg, Object i) {
	report_error(msg, i);
	System.exit(1);
    }

:};

/* */

terminal STRING, IP, REGEXP, FLAG;
terminal Integer PORT;

terminal ANY, SET_IP, SET_TYPE, RECV, SEND, SET_PROTO, TCP, UDP, WITH_FLAGS;
terminal SET_HOST, NLINE, SET_NAME, TCP_STREAM, PROTOCOL, SET_SRC, SET_DST;

non terminal Object file, rule_list, host, rule, tcp_stream_rule, proto;
non terminal Object protocol_rule, sub_rule, flags, port, ip, direction;
non terminal Object sub_rules;

/* */

file ::= host rule;

rule_list ::= rule | rule_list rule;

host ::= SET_HOST IP NLINE NLINE;

rule ::= SET_NAME STRING NLINE
         tcp_stream_rule NLINE
         |
         SET_NAME STRING NLINE
         protocol_rule NLINE;

tcp_stream_rule ::= SET_TYPE TCP_STREAM NLINE
                    SET_SRC port NLINE
                    SET_DST port NLINE
                    SET_IP ip NLINE 
                    direction REGEXP NLINE;

protocol_rule ::= SET_TYPE PROTOCOL NLINE
                  SET_PROTO proto NLINE
                  SET_SRC port NLINE
                  SET_DST port NLINE
                  SET_IP ip NLINE
                  sub_rules;

sub_rules ::= sub_rule | sub_rule sub_rules;

sub_rule ::= direction REGEXP NLINE
             |
             direction REGEXP WITH_FLAGS STRING NLINE
             |
             direction REGEXP WITH_FLAGS NLINE;

flags ::= FLAG | FLAG flags;

proto ::= TCP | UDP;

direction ::= RECV | SEND;

ip ::= IP | ANY;

port ::= PORT | ANY;